#F3D OpenGL 2016 FratisGraphics

#Some of this code is from the University of Arizona and Rosetta Code.
#Please contact me if you would like specifics of this.
#shawnfratis@gmail.com

#This version contains no mouse events. Keyboard commands only, though I am reconsidering this. :)

#This version features only OpenGL w/o textures
#Made in Unicon, with Unicon IDE

###############################################################

link wopen
link xcompat
link color
link graphics
link numbers
link options
link button
link dsetup
link evmux
link ivalue 
link usage
link strings

################################

procedure main()

&window := open("win", "gl", "size=1000,700", "bg=black") | stop("can't even open window, bro")
      
        repeat {

w := Active() | stop("Active fails")

################################
#not presently used - can be modified to re-introduce mouse events.
   
       case e := Event(w) of {

&lpress | &mpress | &rpress: {
	      x1 := &x
	      y1 := &y
	      x2 := y2 := &null
	  }

################################
#begin basic keyboard commands.

#Image paths currently set for Windows.
#You will have to modify it for other platforms or locations. 

"\z": {
	 
        WriteImage("C:/Users/HHE3/Desktop/fg01.png")
}
"\q": {
	      f01()
              }
"\g": {
            Eye(0,0,0, 0,0,-1, 0,1,0)
              }
"\h": {
	      Eye(.04,0,0, 0,0,-1, 0,1,0)

              }
"\j": {
	      Eye(.08,0,0, 0,0,-1, 0,1,0)

              }
"\G": {
	      Eye(-.04,0,0, 0,0,-1, 0,1,0)
              
              }
"\H": {
	      Eye(-.08,0,0, 0,0,-1, 0,1,0)
              
              }
"\J": {
	      Eye(-.10,0,0, 0,0,-1, 0,1,0)
              
              }
"\$": {      
              main()
	         }
"\%": {    
              Refresh()
              }
"\[": {    
              #notused

              }
"\]": {       
              #notused

              }
"\s": {  
              #notused

              }
"\/": {  
              EraseArea()
              }
"\@": {
              exit()
              }
"\=": { 
              inst()
              }
"\.": { 
              Notice("= for instructions. Save as image (z)")
              }
"\,": { 
              openImage()
              }
"\\": {      
              inputprompt()
              }
"\(": { 
              #notused
             
	}
    }
  }

WDone()

end

######################################################################################################

procedure inst()

WAttrib("dx=1", "dy=1")

Fg("green")

WWrite("Welcome to 3DGL01")
WWrite("q is main window w/plane and light. ghj, and GHJ are views") 
WWrite("\ is input prompt, / is erase all")
WWrite("cube01/02=x,y,z,size cyl01/02=x,y,z,h,r1,r2 sphere01/02=x,y,z,r")  
WWrite("plane01/02=x,y,z of 4 corners, %=refresh")
WWrite("Some basic settings:")
WWrite("cyl(-1,-1,-4,2,.5,.5)Sphere(1,0.5,-5,.5)")
WWrite("Cube(2,0.5,-5,.5)FillPolygon(-3,-1,-8,3,-1,-8,3,-1,5,-3,-1,5)")
WWrite("floor:X=+3/-3,Y=-1,Z=-8,5")

end

########################################################

#straighten this up a bit

procedure textin01()

        WAttrib("dx=1", "dy=1")

        Fg("green")

        WAttrib("dx=1", "dy=1")
        WWrite("annotation:")
        s := WRead()
        WWrite("note:",image(s))

end

########################################################
#open image

procedure openImage()

        ReadImage("C:/Users/HHE3/Desktop/bg01.png",1,1)

end
########################################################
########################################################

procedure inputSphere01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglsphere01(ipx,ipy,ipz,ips)

end

########################################################

procedure inputCube01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglcube01(ipx,ipy,ipz,ips)

end

################################################################
procedure inputCyl01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4 
      ipq := s5  
      ipa := s6   
   
  inpglcylinder01(ipx,ipy,ipz,ips,ipq,ipa)

end

################################################################

procedure inputPlane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      s7 := WRead()
      s8 := WRead()
      s9 := WRead()
      s10 := WRead()
      s11 := WRead()
      s12 := WRead()
        
      px  := s1
      py  := s2
      pz  := s3
      pxx := s4
      pyy := s5 
      pzz := s6  
      pxxx := s7
      pyyy := s8
      pzzz := s9
      pxxxx := s10
      pyyyy := s11
      pzzzz := s12           
   
  inpglplane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


end

########################################################

procedure inputSphere02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglsphere02(ipx,ipy,ipz,ips)

end

########################################################

procedure inputCube02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglcube02(ipx,ipy,ipz,ips)

end

################################################################
procedure inputCyl02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4 
      ipq := s5  
      ipa := s6   
   
  inpglcylinder02(ipx,ipy,ipz,ips,ipq,ipa)

end

################################################################

procedure inputPlane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      s7 := WRead()
      s8 := WRead()
      s9 := WRead()
      s10 := WRead()
      s11 := WRead()
      s12 := WRead()
        
      px  := s1
      py  := s2
      pz  := s3
      pxx := s4
      pyy := s5 
      pzz := s6  
      pxxx := s7
      pyyy := s8
      pzzz := s9
      pxxxx := s10
      pyyyy := s11
      pzzzz := s12           
   
  inpglplane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


end

#################################################
procedure inputprompt()
 
        s1 := WRead()

        #WAttrib("dx=1", "dy=1")

        ss1 :=( "cube01")
        ss2 :=( "plane01")
        ss3 :=( "cyl01")
        ss4 :=( "sphere01")
        ss5 :=( "cube02")
        ss6 :=( "plane02")
        ss7 :=( "cyl02")
        ss8 :=( "sphere02")
        ss9 :=( "cube07")
        ss10 :=( "cube01")
        ss11 :=( "cylinder01")
        ss12 :=( "plane01")
        ss13 :=( "sphere")
        ss14 :=( "angle01")
        ss15 :=( "angle02")
        ss16 :=( "angle03")
        ss17 :=( "angle04")
        ss18 :=( "http")
        ss19 :=( "col01")
        ss20 :=( "bp01")
        ss21 :=( "lwfz01")
        ss22 :=( "lwfx01")
        ss23 :=("draw")
      

        if s1== ss1 then inputCube01() 
        else
        if s1== ss2 then inputPlane01() 
        else
        if s1== ss3 then inputCyl01() 
        else
        if s1== ss4 then inputSphere01() 
        else
        if s1== ss5 then inputCube02() 
        else
        if s1== ss6 then inputPlane02() 
        else
        if s1== ss7 then inputCyl02() 
        else
        if s1== ss8 then inputSphere02() 
        else
        if s1== ss9  then notused
        else
        if s1== ss10 then notused
        else
        if s1== ss11 then notused
        else
        if s1== ss12 then notused
        else
        if s1== ss13 then notused
        else
        if s1== ss14 then notused
        else
        if s1== ss15 then notused
        else
        if s1== ss16 then notused
        else
        if s1== ss17 then notused
        else
        if s1== ss18 then notused
        else
        if s1== ss19 then notused
        else
        if s1== ss20 then notused
        else
        if s1== ss21 then notused 
        else
        if s1== ss22 then notused
        else
        if s1== ss23 then notused 
     

    return

end

#############end input cubes etc#################
##############Begin OpenGL 3D##############################

procedure f01()

w := open("scene","gl", "bg=black", "size=100,100")
WAttrib("light0=on, ambient white","fg=specular white")
#WAttrib("light0=on, ambient white,fg=specular white,position 0.0,-1,0.0")

#for testing
#WAttrib("light0=on, ambient  white")
#WAttrib("light0=on, ambient blue-green","fg=specular white")
#DrawCylinder(w, 0.0, -0.2, -3.5, 0.75, 0.5, 0.0)
#DrawTorus(w,0.0, -0.2, -3.5, 0.3, 0.7)
#DrawSphere(w,0.0, 0.59, -2.2, 0.3)
#Fg("red")
#DrawCylinder(-1,-1,-4,2,.5,.5)
#Fg("blue")
#DrawSphere(1,0.5,-5,.5)
#Fg("yellow")
#DrawCube(2,0.5,-5,.5)

Fg("green")
FillPolygon(-3,-1,-8,3,-1,-8,3,-1,5,-3,-1,5)

Refresh()

end

##################################################

procedure inpgleye01()

Eye(1.9,0,4, 1,0,0, 0,.5,0)

end

###########################################################
##################################################

procedure inpglsphere01(ipx,ipy,ipz,ips)

Fg("green")
DrawSphere(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcube01(ipx,ipy,ipz,ips)

Fg("red")
DrawCube(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcylinder01(ipx,ipy,ipz,ips,ipq,ipa)

Fg("blue")
DrawCylinder(ipx,ipy,ipz,ips,ipq,ipa)

end

##################################################

procedure inpglplane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

Fg("orange")
FillPolygon(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

end

##################################################
########################################################

procedure inpglsphere02(ipx,ipy,ipz,ips)

Fg("yellow")
DrawSphere(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcube02(ipx,ipy,ipz,ips)

Fg("grey")
DrawCube(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcylinder02(ipx,ipy,ipz,ips,ipq,ipa)

Fg("orange")
DrawCylinder(ipx,ipy,ipz,ips,ipq,ipa)

end

##################################################

procedure inpglplane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

Fg("magenta")
FillPolygon(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

end

##################################################
########################################################


#END OF PROGRAM########################################

#####################################################################################################################


