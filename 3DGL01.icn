#F3D OpenGL 2016 FratisGraphics

#Some of this code is from the University of Arizona and Rosetta Code.
#Please contact me if you would like specifics of this.
#shawnfratis@gmail.com

#This version contains no mouse events. Keyboard commands only, though I am reconsidering this. :)

#This version features only OpenGL w/o textures
#Made in Unicon, with Unicon IDE

###############################################################

link wopen
link xcompat
link color
link graphics
link numbers
link options
link button
link dsetup
link evmux
link ivalue 
link usage
link strings

################################

procedure main()

&window := open("win", "gl", "size=1000,700", "bg=black") | stop("can't even open window, bro")
      
        repeat {

w := Active() | stop("Active fails")

################################
#not presently used - can be modified to re-introduce mouse events.
   
       case e := Event(w) of {

&lpress | &mpress | &rpress: {
	      x1 := &x
	      y1 := &y
	      x2 := y2 := &null
}
################################
#begin basic keyboard commands.

#Image paths currently set for Windows.
#You will have to modify it for other platforms or locations. 

"\z": {
	 
        WriteImage("C:/Users/HHE3/Desktop/fg01.png")
}
"\q": {
	      f01()
              }
"\g": {
           WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.0,0.0,1.0")

              }
"\h": {
	      
           WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.1,0.0,1.0")
       
              }
"\j": {
	      
           WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.2,0.0,1.0")
    
              }
"\k": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.3,0.0,1.0")
    
              }
"\l": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.4,0.0,1.0")
    
              }
"\f": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.1,0.0,1.0")
    

              }
"\d": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.2,0.0,1.0")
    

              }
"\s": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.3,0.0,1.0")
    

              }
"\a": {
	      WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.4,0.0,1.0")
    

              }
"\G": {
            Eye(0,.2,0, 0,0,-1, 0,1,0)
              }
"\H": {
            WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.0,0.0,2.0")

              }
"\J": {
            WAttrib("eyepos=0.0,0.0,5.0","eyedir=-0.0,0.0,3.0")

              }
"\F": {
            Eye(0,0,0, 0,0,-1, 0,1,0)
              }
"\D": {
            Eye(0,0,0, 0,0,-1, 0,1,0)
              }
"\S": {
            Eye(0,0,0, 0,0,-1, 0,1,0)
              }
"\$": {      
              main()
	         }
"\%": {    
              Refresh()
              }
"\[": {    
             tmod01()

              }
"\]": {       
             back()

              }
"\}": {  
              helpmsg1()

              }
"\/": {  
              EraseArea()
              }
"\@": {
              exit()
              }
"\{": { 
              inst()
              }
"\.": { 
              Notice("= for instructions. Save as image (z)")
              }
"\,": { 
              openImage()
              }
"\\": {      
              inputprompt()
              }
"\(": { 
              #notused
             
	}
    }
  }

WDone()

end

######################################################################################################

procedure inst()

WAttrib("dx=1", "dy=1")

Fg("green")

WWrite("Welcome to 3DGL01")
WWrite("q is main window w/plane and light. ghj, and GHJ are views") 
WWrite("\ is input prompt, / is erase all")
WWrite("cube01/02=x,y,z,size cyl01/02=x,y,z,h,r1,r2 sphere01/02=x,y,z,r")  
WWrite("plane01/02=x,y,z of 4 corners, %=refresh")
WWrite("Some basic settings:")
WWrite("floor:X=+3/-3,Y=-1,Z=-8,5")
WWrite("rcube01 = random displacement")
WWrite("DrawCylinder(0,-1,-4,1,.5,.5)")
WWrite("DrawSphere(0,0.1,-3,.5)")
WWrite("DrawCube(0,0.5,-2,.5)")
WWrite("FillPolygon(-3,-1,-8,3,-1,-8,3,-1,5,-3,-1,5)")

end

############################start online help messages.

#Help Panel 1
procedure helpmsg1()

WAttrib("dx=1", "dy=1")

        Fg("red")

        WWrite("Help 1")
        WWrite("Parameters for 3D planes and objects")
        WWrite("           [+y]               row (a)1    X    X    X  4|  X    X    X")
        WWrite("            |                    ")
        WWrite("            |                 row (b)2    X    X    X  3|  X    X    X")	 
        WWrite("            |                    ")
        WWrite("            |                 row (c)3    X    X    X  2|  X    X    X")
        WWrite("[-x]--------0-------[+x]         ")
        WWrite("            |                 row (d)4  -3|  -2|  -1|  0|   1|   2|  3|")
        WWrite("            |                    ")
        WWrite("            |                 row (e)5    X    X    X   -2|  X    X    X")
        WWrite("            |                    ")
        WWrite("           [-y]               row (f)6    X    X    X   -3|  X    X    X")
        WWrite("                                ")
        WWrite("                              row (g)7    X    X    X   -4|  X    X    X")   
end

######################################################

########################################################

#straighten this up a bit

procedure textin01()

        WAttrib("dx=1", "dy=1")

        Fg("green")

        WAttrib("dx=1", "dy=1")
        WWrite("annotation:")
        s := WRead()
        WWrite("note:",image(s))

end

########################################################
#open image

procedure openImage()

        ReadImage("C:/Users/HHE3/Desktop/bg01.png",1,1)

end
########################################################
########################################################

procedure inputSphere01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglsphere01(ipx,ipy,ipz,ips)

end

########################################################

procedure inputCube01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglcube01(ipx,ipy,ipz,ips)

end

################################################################
procedure inputCyl01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4 
      ipq := s5  
      ipa := s6   
   
  inpglcylinder01(ipx,ipy,ipz,ips,ipq,ipa)

end

################################################################

procedure inputPlane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      s7 := WRead()
      s8 := WRead()
      s9 := WRead()
      s10 := WRead()
      s11 := WRead()
      s12 := WRead()
        
      px  := s1
      py  := s2
      pz  := s3
      pxx := s4
      pyy := s5 
      pzz := s6  
      pxxx := s7
      pyyy := s8
      pzzz := s9
      pxxxx := s10
      pyyyy := s11
      pzzzz := s12           
   
  inpglplane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


end

########################################################

procedure inputSphere02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglsphere02(ipx,ipy,ipz,ips)

end

########################################################

procedure inputCube02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpglcube02(ipx,ipy,ipz,ips)

end

################################################################
procedure inputCyl02()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4 
      ipq := s5  
      ipa := s6   
   
  inpglcylinder02(ipx,ipy,ipz,ips,ipq,ipa)

end

################################################################

procedure inputPlane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      s5 := WRead()
      s6 := WRead()
      s7 := WRead()
      s8 := WRead()
      s9 := WRead()
      s10 := WRead()
      s11 := WRead()
      s12 := WRead()
        
      px  := s1
      py  := s2
      pz  := s3
      pxx := s4
      pyy := s5 
      pzz := s6  
      pxxx := s7
      pyyy := s8
      pzzz := s9
      pxxxx := s10
      pyyyy := s11
      pzzzz := s12           
   
  inpglplane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)


end

###############################################
#expiremental

procedure inputRCube01()

      s1 := WRead()
      s2 := WRead()
      s3 := WRead()
      s4 := WRead()
      
      ipx := s1
      ipy := s2
      ipz := s3
      ips := s4  
   
  inpRglcube01(ipx,ipy,ipz,ips)

end

#################################################
procedure inputprompt()
 
        s1 := WRead()

        #WAttrib("dx=1", "dy=1")

        ss1 :=( "cube01")
        ss2 :=( "plane01")
        ss3 :=( "cyl01")
        ss4 :=( "sphere01")
        ss5 :=( "cube02")
        ss6 :=( "plane02")
        ss7 :=( "cyl02")
        ss8 :=( "sphere02")
        ss9 :=( "rcube01")
        ss10 :=( "notused")
        ss11 :=( "notused")
        ss12 :=( "notused")
        ss13 :=( "notused")
        ss14 :=( "notused")
        ss15 :=( "notused")
        ss16 :=( "notused")
        ss17 :=( "notused")
        ss18 :=( "notusedp")
        ss19 :=( "notused")
        ss20 :=( "notused")
        ss21 :=( "notused")
        ss22 :=( "notused")
        ss23 :=( "notused")
      

        if s1== ss1 then inputCube01() 
        else
        if s1== ss2 then inputPlane01() 
        else
        if s1== ss3 then inputCyl01() 
        else
        if s1== ss4 then inputSphere01() 
        else
        if s1== ss5 then inputCube02() 
        else
        if s1== ss6 then inputPlane02() 
        else
        if s1== ss7 then inputCyl02() 
        else
        if s1== ss8 then inputSphere02() 
        else
        if s1== ss9  then inputRCube01()
        else
        if s1== ss10 then notused
        else
        if s1== ss11 then notused
        else
        if s1== ss12 then notused
        else
        if s1== ss13 then notused
        else
        if s1== ss14 then notused
        else
        if s1== ss15 then notused
        else
        if s1== ss16 then notused
        else
        if s1== ss17 then notused
        else
        if s1== ss18 then notused
        else
        if s1== ss19 then notused
        else
        if s1== ss20 then notused
        else
        if s1== ss21 then notused 
        else
        if s1== ss22 then notused
        else
        if s1== ss23 then notused 
     

    return

end

#############end input cubes etc#################
##############Begin OpenGL 3D##############################

procedure f01()

w := open("scene","gl", "bg=black", "size=100,100")
#WAttrib("light0=on, ambient white","fg=specular white")
WAttrib(w, "light0=diffuse white; ambient black; _
specular white; position 0.0, 1.0, 0.0")

#for testing
#WAttrib("light0=on, ambient white,fg=specular white,position 0.0,-1,0.0")
#WAttrib("light0=on, ambient  white")
#WAttrib("light0=on, ambient blue-green","fg=specular white")
#DrawCylinder(w, 0.0, -0.2, -3.5, 0.75, 0.5, 0.0)
#DrawTorus(w,0.0, -0.2, -3.5, 0.3, 0.7)
#DrawSphere(w,0.0, 0.59, -2.2, 0.3)
#Fg("red")
#DrawCylinder(0,-1,-4,1,.5,.5)
#Fg("blue")
#DrawSphere(0,0.1,-3,.5)
Fg("yellow")
DrawCube(0,0.5,-10,.5)
#Fg("green")
#FillPolygon(-3,-1,-8,3,-1,-8,3,-1,5,-3,-1,5)

Refresh()

end

###########################################################
##################################################

procedure inpglsphere01(ipx,ipy,ipz,ips)

Fg("green")
DrawSphere(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcube01(ipx,ipy,ipz,ips)

Fg("red")
DrawCube(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcylinder01(ipx,ipy,ipz,ips,ipq,ipa)

Fg("blue")
DrawCylinder(ipx,ipy,ipz,ips,ipq,ipa)

end

##################################################

procedure inpglplane01(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

Fg("orange")
FillPolygon(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

end

##################################################
########################################################

procedure inpglsphere02(ipx,ipy,ipz,ips)

Fg("yellow")
DrawSphere(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcube02(ipx,ipy,ipz,ips)

Fg("grey")
DrawCube(ipx,ipy,ipz,ips)

end

##################################################

procedure inpglcylinder02(ipx,ipy,ipz,ips,ipq,ipa)

Fg("orange")
DrawCylinder(ipx,ipy,ipz,ips,ipq,ipa)

end

##################################################

procedure inpglplane02(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

Fg("magenta")
FillPolygon(px,py,pz,pxx,pyy,pzz,pxxx,pyyy,pzzz,pxxxx,pyyyy,pzzzz)

end

##################################################
########################################################
##################################################
#following are expiremental

procedure inpgleye01()

Eye(1.9,0,4, 1,0,0, 0,.5,0)

end

#####################################################

procedure inpRglcube01(ipx,ipy,ipz,ips)

#ipxx := ?1
#ipyy := ?1
#ipzz := ?1

Fg("red")
DrawCube(ipx + ?0.01,ipy + ?0.01,ipz + ?0.01,ips)

Fg("red")
DrawCube(ipx + ?0.01,ipy + ?0.01,ipz + ?0.01,ips)

Fg("red")
DrawCube(ipx + ?0.01,ipy + ?0.01,ipz + ?0.01,ips)

Fg("red")
DrawCube(ipx + ?0.01,ipy + ?0.01,ipz + ?0.01,ips)

end

############################################################

#procedure back(ax,ay)
procedure back()

repeat {

case Event() of {
&ldrag:{

&x := (ax + 0.1)
&y := (ay + 0.1)

#animatedModule01(&x,&y,&x)
#  Eye(0,0,0, 0,0,-1, 0,1,0)
 #   WAttrib("eyepos=0.0,0.0,5.0","eyedir=0.0,0.0,1.0")
    WAttrib("eyepos=0.0,0.0,5.0","eyedir=ax,ay,1.0")
#Eye(0,0,0, 0,0,-1, 0,1,0)
#eyedir(ax,0,0)
#Eye(&x,&y,0, 0,0,-1, 0,1,0)
#WDelay(15)

#circle()

}
}
}

end

######################################################
#procedure tmod01(xdd,v01,v02,v03,v04,v05,v06,v07,v08,v09,v10,v11,v12,v13,v14,v15,cc,dd,ee,ff,xzz)
#FillPolygon(-3,-1,-8,3,-1,-8,3,-1,5,-3,-1,5)
procedure tmod01()

#(v01 := 0,v02 := 0,v03 := 0,v04 := 0,v05 := 0,v06 := 0,v07 := 0 ,v08 := 0,v09 := 0,v10 := 0,v11 := 0,v12 := 0,v13 := 0,v14 := 0,v15 := 0)

(v01 := .2,v02 := .2,v03 := .2,v04 := .2,v05 := .2,v06 := .2,v07 := .2 ,v08 := .2,v09 := .2,v10 := .2,v11 := .2,v12 := .2,v13 := .2,v14 := .2,v15 := .2)

(zq1 := -4,zq2 := -6, zq3 := -8)

xdd := -.5

#duk := ("red")
#dad := ("blue")
#daq := ("green")
#daz := ("yellow")

###########################################################################################

(ya1 := -1+v01,ya2 := -1+v13,ya3 := -1+v12,ya4 := -1+v01,ya5 := -1+v02,ya6 := -1+v13)

(ya7 := -1+v02,yb1 := -1+v03,yb2 := -1+v13,yb3 := -1+v03,yb4 := -1+v14,yb5 := -1+v13)

(yb6 := -1+v03,yb7 := -1+v15,yc1 := -1+v14,yc2 := -1+v03,yc3 := -1+v04,yc4 := -1+v15)

(yc5 := -1+v04,yc6 := -1+v05,yc7 := -1+v15,yd1 := -1+v05,yd2 := -1+v06,yd3 := -1+v15)

(yd4 := -1+v12,yd5 := -1+v13,yd6 := -1+v11,yd7 := -1+v13,ye1 := -1+v10,ye2 := -1+v11)

(ye3 := -1+v13,ye4 := -1+v09,ye5 := -1+v10,ye6 := -1+v13,ye7 := -1+v14,yf1 := -1+v09)

(yf2 := -1+v14,yf3 := -1+v15,yf4 := -1+v09,yf5 := -1+v15,yf6 := -1+v08,yf7 := -1+v09)

(yg1 := -1+v15,yg2 := -1+v07,yg3 := -1+v08,yg4 := -1+v15,yg5 := -1+v06,yg6 := -1+v07)

######################################################

(xa1 := .5+xdd,xa2 := 1+xdd,xa3 := 1.5+xdd,xa4 := 2+xdd,xa5 := 2.5+xdd,xa6 := .5+xdd)

(xa7 := 1+xdd,xa8 := 1.5+xdd,xa9 := 2+xdd,x10 := 2.5+xdd,x11 := .5+xdd,x12 := 1+xdd)

(x13 := 1.5+xdd,x14 := 2+xdd,x15 := 2.5+xdd,xc2 := 1+xdd,xc3 := 1.5+xdd,xc4 := 1.5+xdd)

(xc5 := 1.5+xdd,xc6 := 1.5+xdd,xc7 := 2+xdd,xd1 := 2+xdd,xd2 := 2+xdd,xd3 := 1.5+xdd)

(xd4 := .5+xdd,xd5 := .5+xdd,xd6 := .5+xdd,xd7 := .5+xdd,xe1 := .5+xdd,xe2 := .5+xdd)

(xe3 := .5+xdd,xe4 := 1+xdd,xe5 := .5+xdd,xe6 := .5+xdd,xe7 := 1+xdd,xf1 := 1+xdd)

(xf2 := 1+xdd,xf3 := 1.5+xdd,xf4 := 1+xdd,xf5 := 1.5+xdd,xf6 := 1.5+xdd,xf7 := 1+xdd)

(xg1 := 1.5+xdd,xg2 := 2+xdd,xg3 := 1.5+xdd,xg4 := 1.5+xdd,xg5 := 2+xdd,xg6 := 2+xdd)

##############

xq1 := xa1 
xq2 := xa2  
xq3 := xa3 
 
xq4 := xa4  
xq5 := xa5 
xq6 := xa6 
 
xq7 := xa7  
xq8 := xa8  
xq9 := xa9
 
xm1 := x10  
xm2 := x11 
xm3 := x12 

xm4 := x13 
xm5 := x14  
xm6 := x15
################################## 
##################################
xq3 := xc2 
xq4 := xc3  
xq9 := xc4 

xq4 := xc5  
xq5 := xc6 
xq9 := xc7 

xq5 := xd1  
xm1 := xd2 
xq9 := xd3 

#######################################

xq6 := xd4 
xq7 := xd5  
xm2 := xd6 
 
xq7 := xd7 
xm3 := xe1 
xm2 := xe2 
 
xq7 := xe3  
xm4 := xe4  
xm3 := xe5 
 
xq7 := xe6 
xq8 := xe7  
xm4 := xf1 

xq8 := xf2  
xq9 := xf3
xm4 := xf4 

xq9 := xf5  
xm5 := xf6 
xm4 := xf7 

xq9 := xg1  
xm6 := xg2  
xm5 := xg3 

xq9 := xg4 
xm1 := xg5  
xm6 := xg6 

##############################################


yq1 := ya1 
yq7 := ya2  
yq6 := ya3 
 
yq1 := ya4 
yq2 := ya5 
yq7 := ya6 
 
yq2 := ya7 
yq3 := yb1 
yq7 := yb2 
 
yq3 := yb3  
yq8 := yb4
yq7 := yb5 

yq3 := yb6 
yq9 := yb7  
yq8 := yc1 

yq3 := yc2  
yq4 := yc3 
yq9 := yc4 

yq4 := yc5 
yq5 := yc6  
yq9 := yc7 

yq5 := yd1 
ym1 := yd2  
yq9 := yd3 

#######################################

yq6 := yd4  
yq7 := yd5  
ym2 := yd6 
 
yq7 := yd7  
ym3 := ye1
ym2 := ye2 
 
yq7 := ye3 
ym4 := ye4  
ym3 := ye5 
 
yq7 := ye6 
yq8 := ye7 
ym4 := yf1 

yq8 := yf2  
yq9 := yf3  
ym4 := yf4 

yq9 := yf5  
ym5 := yf6  
ym4 := yf7 

yq9 := yg1  
ym6 := yg2  
ym5 := yg3 

yq9 := yg4  
ym1 := yg5  
ym6 := yg6 

######################################################

Fg("red")
#1
 FillPolygon(xq1,yq1,zq1,xq2,yq2,zq1,xq6,yq6,zq2)

Fg("green")
#2  
 FillPolygon(xq2,yq2,zq1,xq7,yq7,zq1,xq6,yq6,zq2)

Fg("blue")
#3  
 FillPolygon(xq2,yq2,zq1,xq3,yq3,zq1,xq7,yq7,zq2)

Fg("orange")
#4  
 FillPolygon(xq3,yq3,zq1,xq8,yq8,zq2,xq7,yq7,zq2)

Fg("magenta")
#5
 FillPolygon(xq3,yq3,zq1,xq4,yq4,zq1,xq8,yq8,zq2)

Fg("yellow")
#6  
 FillPolygon(xq4,yq4,zq1,xq9,yq9,zq2,xq8,yq8,zq2)

Fg("white")
#7
 FillPolygon(xq4,yq4,zq1,xq5,yq5,zq1,xq9,yq9,zq2)

Fg("blue")
#8  
 FillPolygon(xq5,yq5,zq1,xm1,ym1,zq2,xq9,yq9,zq2)

######################################################

Fg("pink")
#9  
 FillPolygon(xq6,yq6,zq2,xq7,yq7,zq2,xm2,ym2,zq3)

Fg("green")
#10  
 FillPolygon(xq7,yq7,zq2,xm3,ym3,zq3,xm2,ym2,zq3)

Fg("red")
#11
 FillPolygon(xq7,yq7,zq2,xq8,yq8,zq2,xm3,ym3,zq3)

Fg("magenta")
#12  
 FillPolygon(xq8,yq8,zq2,xm4,ym4,zq3,xm3,ym3,zq3)

Fg("grey")
#13
 FillPolygon(xq8,yq8,zq2,xq9,yq9,zq2,xm4,ym4,zq3)

Fg("yellow")
#14  
 FillPolygon(xq9,yq9,zq2,xm5,ym5,zq3,xm4,ym4,zq3)

Fg("green")
#15  
 FillPolygon(xq9,yq9,zq2,xm1,ym1,zq2,xm5,ym5,zq3)

Fg("blue")
#16  
 FillPolygon(xm1,ym1,zq2,xm6,ym6,zq3,xm5,ym5,zq3)
 
end

##################################################################
#END OF PROGRAM########################################

#####################################################################################################################


